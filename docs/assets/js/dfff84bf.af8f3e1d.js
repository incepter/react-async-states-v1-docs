"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[541],{4993:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>y});var n=a(2983);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},s=Object.keys(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),c=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},d=function(t){var e=c(t.components);return n.createElement(l.Provider,{value:e},t.children)},u="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,s=t.originalType,l=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),u=c(a),f=r,y=u["".concat(l,".").concat(f)]||u[f]||p[f]||s;return a?n.createElement(y,o(o({ref:e},d),{},{components:a})):n.createElement(y,o({ref:e},d))}));function y(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var s=a.length,o=new Array(s);o[0]=f;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[u]="string"==typeof t?t:r,o[1]=i;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},1104:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=a(2798),r=(a(2983),a(4993));const s={sidebar_position:1,sidebar_label:"addBooleanStatus"},o="addBooleanStatus",i={unversionedId:"utils/addBooleanStatus",id:"utils/addBooleanStatus",title:"addBooleanStatus",description:"This selector can be passed to useAsyncState, and will add the following",source:"@site/docs/utils/2.addBooleanStatus.md",sourceDirName:"utils",slug:"/utils/addBooleanStatus",permalink:"/react-async-states-v1-docs/docs/utils/addBooleanStatus",draft:!1,editUrl:"https://github.com/incepter/react-async-states-v1-docs/edit/main/packages/docs/docs/utils/2.addBooleanStatus.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"addBooleanStatus"},sidebar:"tutorialSidebar",previous:{title:"State Boundary",permalink:"/react-async-states-v1-docs/docs/utils/state-boundary"},next:{title:"Cancellations",permalink:"/react-async-states-v1-docs/docs/faq/cancellations"}},l={},c=[],d={toc:c};function u(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"addbooleanstatus"},(0,r.kt)("inlineCode",{parentName:"h1"},"addBooleanStatus")),(0,r.kt)("p",null,"This selector can be passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsyncState"),", and will add the following\nproperties to the existing state:"),(0,r.kt)("p",null,"isInitial, isPending, isError, isAborted, isSuccess."),(0,r.kt)("p",null,"These properties are intuitive and well typed along with the equivalent status:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'  type User = { username: string, password: string };\n\n  function producer(props: ProducerProps<User, Error, "Timeout">): Promise<User> {\n    if (!props.args[0]) throw new Error("username or password is incorrect");\n    return Promise.resolve({username: \'admin\', password: \'admin\'});\n  }\n\n  let {state, runc} = useAsyncState({producer, selector: defaultSelector});\n\n  if (state.isPending) {\n    let {data} = state; // type of data: null\n  }\n  if (state.isError) {\n    let {data} = state; // type of data: Error\n  }\n  if (state.isAborted) {\n    let {data} = state; // type of data: "Timeout"\n  }\n\n  if (state.status === Status.initial) {\n    let data = state.data; // ts type of data <- User | undefined\n    let {isError, isSuccess} = state;\n    if (isSuccess) { // <- type of isSuccess is false\n      console.log("impossible")\n    }\n    if (isError) {  // <- type of isError is false\n      console.log(\'impossible\')\n    }\n  }\n  if (state.status === Status.pending) {\n    let data = state.data; // ts type of data <- null\n  }\n  if (state.status === Status.success) {\n    let data = state.data; // ts type of data <- User\n  }\n  if (state.status === Status.error) {\n    let data = state.data; // ts type of data <- Error\n  }\n  if (state.status === Status.aborted) {\n    let data = state.data; // ts type of data <- "Timeout"\n  }\n')))}u.isMDXComponent=!0}}]);
