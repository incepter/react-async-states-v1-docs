"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[881],{4993:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(2983);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(2798),r=(n(2983),n(4993));const i={sidebar_position:1,sidebar_label:"State Boundary"},o="State Boundary",l={unversionedId:"utils/state-boundary",id:"utils/state-boundary",title:"State Boundary",description:"What is this ?",source:"@site/docs/utils/1.state-boundary.md",sourceDirName:"utils",slug:"/utils/state-boundary",permalink:"/react-async-states/docs/utils/state-boundary",draft:!1,editUrl:"https://github.com/incepter/react-async-states/edit/main/packages/docs/docs/utils/1.state-boundary.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"State Boundary"},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/react-async-states/docs/utils/intro"},next:{title:"addBooleanStatus",permalink:"/react-async-states/docs/utils/addBooleanStatus"}},d={},s=[{value:"What is this ?",id:"what-is-this-",level:2},{value:"<code>StateBoundaryProps</code>",id:"stateboundaryprops",level:2},{value:"<code>useCurrentState()</code>",id:"usecurrentstate",level:2},{value:"<code>useBoundary(sourceKey?: string)</code>",id:"useboundarysourcekey-string",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"state-boundary"},"State Boundary"),(0,r.kt)("h2",{id:"what-is-this-"},"What is this ?"),(0,r.kt)("p",null,"State boundary is a component that allows performing all render strategies in react:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Render Then Fetch: Render the initial component, then fetch its data"),(0,r.kt)("li",{parentName:"ol"},"Fetch As You Render: fetch data while rendering and suspend when pending and\nthrow when error."),(0,r.kt)("li",{parentName:"ol"},"Fetch Then Render: renders nothing until it fetches data, suppressing\nthe pending state.")),(0,r.kt)("h2",{id:"stateboundaryprops"},(0,r.kt)("inlineCode",{parentName:"h2"},"StateBoundaryProps")),(0,r.kt)("p",null,"This component accepts the following props:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"config")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MixedConfig<T, E, R, A, S>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:null},"The same supported configuration as the ",(0,r.kt)("inlineCode",{parentName:"td"},"useAsyncState")," hook")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dependencies")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any[]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]")),(0,r.kt)("td",{parentName:"tr",align:null},"The dependencies that will be passed to ",(0,r.kt)("inlineCode",{parentName:"td"},"useAsyncState")," hook")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"strategy")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"RenderStrategy")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"RenderThenFetch")),(0,r.kt)("td",{parentName:"tr",align:null},"The applied strategy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"render")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Record<Status, React.ReactNode>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:null},"A record containing the component to render for each status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"children")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"React.ReactNode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:null},"children are considered as a fallback whenever the ",(0,r.kt)("inlineCode",{parentName:"td"},"render")," property doesn't have the actual status")))),(0,r.kt)("p",null,"Where the ",(0,r.kt)("inlineCode",{parentName:"p"},"RenderStrategy")," enum is defined as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"\nexport enum RenderStrategy {\nFetchAsYouRender = 0,\nFetchThenRender = 1,\nRenderThenFetch = 2,\n}\n\n")),(0,r.kt)("h2",{id:"usecurrentstate"},(0,r.kt)("inlineCode",{parentName:"h2"},"useCurrentState()")),(0,r.kt)("p",null,"This hook returns the current state in the boundary"),(0,r.kt)("h2",{id:"useboundarysourcekey-string"},(0,r.kt)("inlineCode",{parentName:"h2"},"useBoundary(sourceKey?: string)")),(0,r.kt)("p",null,"When Multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"StateBoundary")," are nested, this hook allows you to take any\nstate up in the tree by its ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"sourceKey")," isn't found, this hook will throw an ",(0,r.kt)("inlineCode",{parentName:"p"},"Error"),".")),(0,r.kt)("p",null,"This hook then calls ",(0,r.kt)("inlineCode",{parentName:"p"},"useSource")," on the result obtained from the ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," given\nto that state boundary."))}u.isMDXComponent=!0}}]);